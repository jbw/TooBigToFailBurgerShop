version: '3.8'

services:

  dapr-dashboard:
    image: daprio/dashboard
    ports:
      - 8034:8080
    volumes:
      - "../dapr/components/:/home/nonroot/.dapr/components"
      - "../dapr/configuration/:/home/nonroot/.dapr/configuration"
  redis:
    image: redis:alpine

  seq:
    image: datalust/seq
    environment:
      ACCEPT_EULA: 'Y'
      SEQ_FIRSTRUN_ADMINUSERNAME: burger
      SEQ_FIRSTRUN_ADMINPASSWORD: burger
    ports:
      - 8033:80

  mongo:
    image: bitnami/mongodb
    environment:
      MONGODB_USERNAME: burger
      MONGODB_PASSWORD: burger
      MONGODB_DATABASE: burgers
      MONGODB_ROOT_PASSWORD: burger
      MONGODB_REPLICA_SET_MODE: primary 
      MONGODB_ADVERTISED_HOSTNAME: mongo
      MONGODB_REPLICA_SET_KEY: replicasetkey123 
    ports:
      - 27017:27017
    volumes:
     - 'mongodb_master_data:/bitnami/mongodb'

  mongodb-secondary:
    image: 'docker.io/bitnami/mongodb:4.4-debian-10'
    depends_on:
      - mongo
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-secondary
      - MONGODB_REPLICA_SET_MODE=secondary
      - MONGODB_INITIAL_PRIMARY_HOST=mongo
      - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=burger
      - MONGODB_REPLICA_SET_KEY=replicasetkey123

  mongodb-arbiter:
    image: 'docker.io/bitnami/mongodb:4.4-debian-10'
    depends_on:
      - mongo
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-arbiter
      - MONGODB_REPLICA_SET_MODE=arbiter
      - MONGODB_INITIAL_PRIMARY_HOST=mongo
      - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=burger
      - MONGODB_REPLICA_SET_KEY=replicasetkey123

  mongo-express:
    image: mongo-express
    ports:
      - 8081:8081
    depends_on:
      - mongo
    environment:
      ME_CONFIG_MONGODB_ENABLE_ADMIN: 'false'
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: burger
      ME_CONFIG_MONGODB_ADMINPASSWORD: burger
      ME_CONFIG_MONGODB_AUTH_DATABASE: burgers
      ME_CONFIG_MONGODB_AUTH_USERNAME: burger
      ME_CONFIG_MONGODB_AUTH_PASSWORD: burger
      ME_CONFIG_BASICAUTH_USERNAME: burger
      ME_CONFIG_BASICAUTH_PASSWORD: burger

  pgadmin:
    image: dpage/pgadmin4
    ports:
        - "6541:80"
    environment:
        PGADMIN_DEFAULT_EMAIL: burger@burger.com
        PGADMIN_DEFAULT_PASSWORD: burger

  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - "16686:16686"
      - "9412:9412"
    environment:
        COLLECTOR_ZIPKIN_HTTP_PORT: 9411

  rabbitmq:
    image: rabbitmq:management-alpine
    ports:
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "burger"
      RABBITMQ_DEFAULT_PASS: "burger"

  burgers.data:
    image: postgres:alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "burger"
      POSTGRES_PASSWORD: "burger"
      POSTGRES_DB: "burgers"
    command: "--max-prepared-transactions=110"

  burgers.gateway.api:
    image: envoyproxy/envoy:v1.17.1

  burgers.gateway.api.dapr:
    image: "daprio/daprd:1.0.0"
    network_mode: "service:burgers.gateway.api"
    depends_on:
      - burgers.gateway.api

  burgers.webspa:
    image: burgers.webspa
    build:
      context: .
      dockerfile: web/Burgers.WebSPA/Dockerfile

  burgers.ordering.api:
    image: burgers.ordering.api
    build:
      context: .
      dockerfile: services/Ordering/Ordering.API/Dockerfile
    depends_on:
      - "burgers.data"

  burgers.ordering.api.dapr:
    image: "daprio/daprd:1.1.1"
    network_mode: "service:burgers.ordering.api"
    depends_on:
      - burgers.ordering.api

  burgers.create.order.consumer:
    image: burgers.create.order.consumer
    build:
      context: .
      dockerfile: services/Ordering/CreateOrder.Consumer/Dockerfile

  burgers.create.order.consumer.dapr:
    image: "daprio/daprd:1.1.1"
    network_mode: "service:burgers.create.order.consumer"
    depends_on:
      - burgers.create.order.consumer

  burgers.ordering.state.service:
    image: burgers.ordering.state.service
    build:
      context: .
      dockerfile: services/Ordering/Ordering.StateService/Dockerfile

  burgers.process.order.consumer:
    image: burgers.process.order.consumer
    build:
      context: .
      dockerfile: services/Ordering/ProcessOrder.Consumer/Dockerfile

  burgers.basket.api:
    image: burgers.basket.api
    build:
      context: .
      dockerfile: services/Basket/Basket.API/Dockerfile

  burgers.basket.api.dapr:
    image: "daprio/daprd:1.1.1"
    network_mode: "service:burgers.basket.api"
    depends_on:
      - burgers.basket.api

  dapr-placement:
    image: "daprio/dapr:1.1.1"

volumes:
  mongodb_master_data:
    driver: local
networks:
  default:
    external:
      name: burgers.network

